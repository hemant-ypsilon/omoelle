{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/location-accuracy/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqClC,oCAAiB;;;;;;;0CA2BzB,CAAC;;;;;2CAMA,CAAC;;;;;yDAMa,CAAC;;;;;+CAMX,CAAC;;;;;2CAML,CAAC;;;;;oCAMR,CAAC;;;;;yCAMI,CAAC,CAAC;;;;;qCAMN,CAAC;;;;;uCAMC,CAAC;;;;;gCAMR,CAAC;;;;;6CAMY,CAAC;;;;;qCAMT,CAAC;;;;;mDAMa,CAAC;;;IAlGtC;;;OAGG;;;;;IAEH,qCAAU;;;;kBAAuB,MAAM,CAAC,EAAE;IAE1C;;;OAGG;;;;;IAEH,uCAAY;;;;kBAAuB,MAAM,CAAC,EAAE;IAE5C;;;;OAIG;;;;;;IAEH,kCAAO;;;;;cAAC,QAAgB,IAAkB,MAAM,CAAC,EAAE;;gBAtBpD,UAAU;;;;;QAMR,OAAO,EAAE;;;;sDACgC;;QAMzC,OAAO,EAAE;;;;wDACkC;;QAO3C,OAAO,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;;;;mDACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;IArBxC,gBAAgB;QAR5B,MAAM,CAAC;YACN,UAAU,EAAE,kBAAkB;YAC9B,MAAM,EAAE,0CAA0C;YAClD,SAAS,EAAE,kCAAkC;YAC7C,IAAI,EAAE,oEAAoE;YAC1E,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,gBAAgB,EAqG5B;2BA3ID;EAsCsC,iBAAiB;SAA1C,gBAAgB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Location Accuracy\r\n * @description\r\n * This Cordova/Phonegap plugin for Android and iOS to request enabling/changing of Location Services by triggering a native dialog from within the app, avoiding the need for the user to leave your app to change location settings manually.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { LocationAccuracy } from '@ionic-native/location-accuracy';\r\n *\r\n * constructor(private locationAccuracy: LocationAccuracy) { }\r\n *\r\n * ...\r\n *\r\n * this.locationAccuracy.canRequest().then((canRequest: boolean) => {\r\n *\r\n *   if(canRequest) {\r\n *     // the accuracy option will be ignored by iOS\r\n *     this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\r\n *       () => console.log('Request successful'),\r\n *       error => console.log('Error requesting location permissions', error)\r\n *     );\r\n *   }\r\n *\r\n * });\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'LocationAccuracy',\r\n  plugin: 'cordova-plugin-request-location-accuracy',\r\n  pluginRef: 'cordova.plugins.locationAccuracy',\r\n  repo: 'https://github.com/dpa99c/cordova-plugin-request-location-accuracy',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n@Injectable()\r\nexport class LocationAccuracy extends IonicNativePlugin {\r\n  /**\r\n   * Indicates if you can request accurate location\r\n   * @returns {Promise<boolean>} Returns a promise that resovles with a boolean that indicates if you can request accurate location\r\n   */\r\n  @Cordova()\r\n  canRequest(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Indicates if a request is currently in progress\r\n   * @returns {Promise<boolean>} Returns a promise that resolves with a boolean that indicates if a request is currently in progress\r\n   */\r\n  @Cordova()\r\n  isRequesting(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Requests accurate location\r\n   * @param accuracy {number} Accuracy, from 0 to 4. You can use the static properties of this class that start with REQUEST_PRIORITY_\r\n   * @returns {Promise<any>} Returns a promise that resolves on success and rejects if an error occurred\r\n   */\r\n  @Cordova({ callbackOrder: 'reverse' })\r\n  request(accuracy: number): Promise<any> { return; }\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  REQUEST_PRIORITY_NO_POWER = 0;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  REQUEST_PRIORITY_LOW_POWER = 1;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  REQUEST_PRIORITY_BALANCED_POWER_ACCURACY = 2;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  REQUEST_PRIORITY_HIGH_ACCURACY = 3;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  SUCCESS_SETTINGS_SATISFIED = 0;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  SUCCESS_USER_AGREED = 1;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_ALREADY_REQUESTING = -1;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_INVALID_ACTION = 0;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_INVALID_ACCURACY = 1;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_EXCEPTION = 1;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_CANNOT_CHANGE_ACCURACY = 3;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_USER_DISAGREED = 4;\r\n\r\n  /**\r\n   * Convenience constant\r\n   * @type {number}\r\n   */\r\n  ERROR_GOOGLE_API_CONNECTION_FAILED = 4;\r\n\r\n}\r\n"]}